# Generated by Django 3.2.9 on 2022-02-10 20:07

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import register.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dog_image', models.ImageField(blank=True, null=True, upload_to='dogs/', validators=[django.core.validators.validate_image_file_extension, register.models.validate_file_size_3MB], verbose_name='Zdjęcie')),
                ('dog_name', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(3), register.models.validate_isalphabet], verbose_name='Imię')),
                ('breeder', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MinLengthValidator(3), register.models.validate_isalphabet], verbose_name='Hodowla')),
                ('gender', models.CharField(choices=[('Suka', 'Suka'), ('Pies', 'Pies')], max_length=4, verbose_name='Płeć')),
                ('day_of_birth', models.DateField(validators=[register.models.validate_future_date], verbose_name='Data urodzenia')),
                ('chip_number', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.MinLengthValidator(4)], verbose_name='Numer chipa')),
                ('field_exam_0', models.BooleanField(blank=True, null=True, verbose_name='Egzamin teren 0')),
                ('field_exam_1', models.BooleanField(blank=True, null=True, verbose_name='Egzamin teren 1')),
                ('ruins_exam_0', models.BooleanField(blank=True, null=True, verbose_name='Egzamin gruzy 0')),
                ('ruins_exam_1', models.BooleanField(blank=True, null=True, verbose_name='Egzamin gruzy 1')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50, unique=True, validators=[register.models.validate_isalphabet], verbose_name='Kategoria')),
            ],
        ),
        migrations.CreateModel(
            name='Fleet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(max_length=50, verbose_name='Marka')),
                ('brand_model', models.CharField(max_length=50, verbose_name='Model')),
                ('year', models.PositiveIntegerField(validators=[register.models.validate_min_value_year_200, django.core.validators.MaxValueValidator(register.models.current_year)], verbose_name='Rok')),
                ('fuel', models.CharField(blank=True, choices=[('Benzyna', 'Benzyna'), ('Diesel', 'Diesel'), ('Inne', 'Inne')], max_length=10, null=True, verbose_name='Paliwo')),
                ('last_service_date', models.DateField(blank=True, null=True, validators=[register.models.validate_future_date], verbose_name='Data serwisu')),
                ('mileage', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999999)], verbose_name='Przebieg (km)')),
                ('max_passengers', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ilość osób')),
                ('max_dogs', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ilość psów')),
                ('additional_notes', models.TextField(blank=True, max_length=150, null=True, verbose_name='Uwagi')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_image', models.ImageField(blank=True, null=True, upload_to='members/', validators=[django.core.validators.validate_image_file_extension, register.models.validate_file_size_3MB], verbose_name='Zdjęcie')),
                ('member_name', models.CharField(max_length=20, validators=[django.core.validators.MinLengthValidator(2), register.models.validate_isalphabet], verbose_name='Imię')),
                ('member_surname', models.CharField(max_length=20, validators=[django.core.validators.MinLengthValidator(2), register.models.validate_isalphabet], verbose_name='Nazwisko')),
                ('member_mobile', models.IntegerField(blank=True, null=True, verbose_name='Telefon')),
                ('member_email', models.EmailField(blank=True, max_length=254, null=True, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.EmailValidator], verbose_name='Email')),
                ('kpp_course', models.CharField(blank=True, choices=[('TAK', 'Tak'), ('NIE', 'Nie')], max_length=3, null=True, verbose_name='KPP')),
                ('kpp_validity', models.DateField(blank=True, null=True, verbose_name='Termin ważności KPP')),
                ('medical_exam', models.CharField(blank=True, choices=[('TAK', 'Tak'), ('NIE', 'Nie')], max_length=3, null=True, verbose_name='Badania Lekarskie')),
                ('medical_exam_validity', models.DateField(blank=True, null=True, verbose_name='Termin ważności badań')),
                ('dog_guide_course', models.CharField(blank=True, choices=[('TAK', 'Tak'), ('NIE', 'Nie')], max_length=3, null=True, verbose_name='Kurs Przewodników')),
                ('osp_course', models.CharField(blank=True, choices=[('TAK', 'Tak'), ('NIE', 'Nie')], max_length=3, null=True, verbose_name='Kurs OSP')),
                ('owned_dog', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='members', to='register.dog', verbose_name='psy')),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nazwa')),
                ('amount', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999)], verbose_name='Ilość')),
                ('additional_notes', models.TextField(blank=True, max_length=500, null=True, verbose_name='Uwagi')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='register.equipmentcategory', verbose_name='Kategoria')),
            ],
        ),
    ]
